// create the depth texture
glGenTextures(1, &gs.depthTexture);
glBindTexture(GL_TEXTURE_2D, gs.depthTexture);
glTexStorage2D(GL_TEXTURE_2D, 1, GL_DEPTH_COMPONENT32F, 200, 200);

// Framebuffer
glGenFramebuffers(1, &gs.fbo);
glBindFramebuffer(GL_FRAMEBUFFER, gs.fbo);
glFramebufferTexture2D(GL_FRAMEBUFFER, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D, gs.depthTexture, 0);

assert(glCheckFramebufferStatus(GL_FRAMEBUFFER) == GL_FRAMEBUFFER_COMPLETE);
glBindFramebuffer(GL_FRAMEBUFFER, 0);


// Texture
glActiveTexture(GL_TEXTURE0);
glBindTexture(GL_TEXTURE_2D, gs.depthTexture);

// glsl
layout(binding=0) uniform sampler2D textureDepth;

...

    float w = posInLightTexture.w;
    posInLightTexture /= posInLightTexture.w;

    posInLightTexture.xy += vec2(1.f, 1.f);
    posInLightTexture.xy /= vec2(2.f, 2.f);

    float z = posInLightTexture.z;
    z += 1.0;
    z /= 2.0;

    vec4 depth = texture(textureDepth, posInLightTexture.xy);

glBindFramebuffer(GL_FRAMEBUFFER, gs.fbo);

!! ne pas oublier le viewport

glViewPort(800, 800);


!! Debug avec gl_FragCoords.xy
